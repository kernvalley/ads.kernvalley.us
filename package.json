{
  "name": "ads.kernvalley.us",
  "version": "1.4.0",
  "private": true,
  "description": "Advertise on websites throughout the Kern River Valley",
  "config": {
    "icons": "./icons.csv",
    "serve": {
      "domain": "localhost",
      "path": "./",
      "port": 8000
    },
    "dir": {
      "css": "css/",
      "js": "js/",
      "img": "img/",
      "html": "./"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kernvalley/ads.kernvalley.us.git"
  },
  "keywords": [
    "ads",
    "advertise",
    "kern valley",
    "kern river valley",
    "whiskey flat days"
  ],
  "author": "Chris Zuber <admin@kernvalley.us>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kernvalley/ads.kernvalley.us/issues"
  },
  "homepage": "https://github.com/kernvalley/ads.kernvalley.us",
  "scripts": {
    "test": "npm run lint:js && npm run lint:css && npm run lint:html",
    "start": "npm run netlify",
    "preinstall": "npm run git:submodules",
    "postinstall": "npm run build",
    "preversion": "npm test",
    "git:fetch": "git fetch --prune --tags",
    "git:submodules": "if [ -f '.gitmodules' ]; then git submodule update --init --recursive; fi",
    "lint:css": "if [ -f '.stylelintrc.json' ]; then stylelint ${npm_package_config_dir_css}; fi",
    "lint:html": "if [ -f '.htmlhintrc' ]; then htmlhint ${npm_package_config_dir_html}; fi",
    "lint:js": "if [ -f '.eslintrc.json' ]; then eslint .; fi",
    "fix:css": "if [ -f './stylelintrc.json' ]; then stylelint ${npm_package_config_dir_css} --fix; fi",
    "fix:js": "if [ -f '.eslintrc.json' ]; then eslint. --fix; fi",
    "build": "npm run build:icons && npm run build:css && npm run build:js",
    "build:css": "if [ -f 'postcss.config.js' ]; then postcss ${npm_package_config_dir_css}index.css -o ${npm_package_config_dir_css}index.min.css; fi",
    "build:icons": "if [ -f ${npm_package_config_icons} ]; then $(svg-sprite-generate -c ${npm_package_config_icons} -o 'img/icons.svg'); fi",
    "build:js": "if [ -f 'rollup.config.js' ]; then rollup --config; fi",
    "netlify": "if [ -f '.netlify/state.json' ]; then npm run netlify:live; else npm run netlify:serve; fi",
    "netlify:deploy": "netlify deploy",
    "netlify:serve": "netlify dev",
    "netlify:live": "netlify dev --live",
    "netlify:link": "netlify link",
    "version:bump": "npm run version:bump:patch",
    "version:bump:patch": "npm version --no-git-tag-version patch",
    "version:bump:minor": "npm version --no-git-tag-version minor",
    "version:bump:major": "npm version --no-git-tag-version patch"
  },
  "dependencies": {
    "lambda-multipart": "^1.0.2",
    "netlify-js-app": "^1.0.13",
    "node-fetch": "^2.6.1"
  }
}
