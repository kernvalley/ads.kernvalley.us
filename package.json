{
  "name": "ads.kernvalley.us",
  "version": "1.1.5",
  "private": true,
  "description": "Advertise on Whiskey Flat Days App, KernValley.US sites and more!",
  "config": {
    "icons": "./icons.csv",
    "serve": {
      "domain": "localhost",
      "path": "./",
      "port": 8000
    },
    "dir": {
      "css": "css/",
      "js": "js/",
      "img": "img/",
      "html": "./"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kernvalley/ads.kernvalley.us.git"
  },
  "keywords": [
    "ads",
    "advertise",
    "kern valley",
    "kern river valley",
    "whiskey flat days"
  ],
  "author": "Chris Zuber <admin@kernvalley.us>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kernvalley/ads.kernvalley.us/issues"
  },
  "homepage": "https://github.com/kernvalley/ads.kernvalley.us",
  "scripts": {
    "test": "npm run lint",
    "start": "npm run netlify",
    "preinstall": "npm run git:submodules",
    "postinstall": "npm run build",
    "git:fetch": "git fetch --prune --tags",
    "git:submodules": "if [ -f '.gitmodules' ]; then git submodule update --init --recursive; fi",
    "lint": "npm run lint:js && npm run lint:css && npm run lint:html",
    "lint:js": "if [ -f .eslintrc.json ]; then eslint .; fi",
    "lint:css": "if [ -f .stylelintrc.json ]; then stylelint './**.css'; fi",
    "lint:html": "if [ -f .htmlhintrc ]; then htmlhint ${npm_package_config_dir_html}; fi",
    "fix:css": "stylelint './**.css' --fix",
    "fix:js": "eslint. --fix",
    "build": "npm run build:icons && npm run build:css && npm run build:js",
    "build:css": "if [ -f 'postcss.config.js' ]; then postcss ${npm_package_config_dir_css}index.css -o ${npm_package_config_dir_css}index.min.css; fi",
    "build:js": "if [ -f 'rollup.config.js' ]; then rollup --config; fi",
    "build:icons": "if [ -f ${npm_package_config_icons} ]; then $(svg-sprite-generate -c ${npm_package_config_icons} -o 'img/icons.svg'); fi",
    "netlify": "if [ -f '.netlify/state.json' ]; then npm run netlify:live; else npm run netlify:serve; fi",
    "netlify:deploy": "netlify deploy",
    "netlify:serve": "netlify dev",
    "netlify:live": "netlify dev --live",
    "netlify:link": "netlify link"
  },
  "dependencies": {
    "svg-sprite-generator": "0.0.7"
  },
  "devDependencies": {
    "babel-eslint": "^10.1.0",
    "cssnano": "^4.1.10",
    "cssnano-preset-default": "^4.0.7",
    "eslint": "^7.10.0",
    "eslint-plugin-async-await": "0.0.0",
    "eslint-plugin-babel": "^5.3.1",
    "eslint-plugin-frontmatter": "0.0.8",
    "htmlhint": "^0.14.1",
    "netlify-cli": "^2.65.0",
    "postcss": "^7.0.35",
    "postcss-cli": "^7.1.2",
    "postcss-cssnext": "^3.1.0",
    "postcss-custom-properties": "^10.0.0",
    "postcss-discard-comments": "^4.0.2",
    "postcss-import": "^12.0.1",
    "postcss-import-url": "^5.1.0",
    "postcss-media-minmax": "^4.0.0",
    "postcss-preset-env": "^6.7.0",
    "postcss-url": "^8.0.0",
    "rollup": "^2.28.2",
    "rollup-plugin-terser": "^7.0.2",
    "rollup-plugin-url-resolve": "^0.1.1",
    "stylelint": "^13.7.2",
    "stylelint-config-recommended": "^3.0.0",
    "stylelint-config-standard": "^20.0.0",
    "svgo": "^1.3.2"
  }
}
